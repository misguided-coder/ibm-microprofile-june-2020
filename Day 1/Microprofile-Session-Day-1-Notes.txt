Rules
1) Keep yourself on mute if required unmute and speak
2) We can speak via chat or voice command in case of questions/doubts
3) Make session as intercative as possible by asking questions
4) 3 breaks for Morning Tea 11:00 for 15 minutes ,1:10 for 50 mitnues,4:00 for 15 minutes very very strictly
5) Be honest while learing remotely by attending very actively, do not be passive

Methodology
20% time will be spent on explaing theary and concepts
80% time will be spent on writing demos and examples

RPS Team
Ritesh Tyagi
HI2TYAGI@YAHOO.COM
9999030199

Prerequisites 
1) Good Java developres
2) Web development experience i.e. Servlets/JSP....
3) Eclipse IDE
4) Maven build tool
5) REST architecture

Softwares Required
1) Windows 10 machines with 408 GB RAM
2) JDK 8
3) Eclipse 4.8+
4) Maven 3
5) Chrome latest with some plugings

RPS Cloud Labs
  Already systems are setup with all the softwares to use out of the box
  
Course Contents 5 Days

Time to Start

Q) What is a Microservice?

Microservices
   a) is an architecture which promotes to divide a big size application to bream down into small parts
      and then developing each part individually as a "whole and independent application"
   b) this architecture provides uniform communication among various microservices using a common 
      language independent mechanisom known as "REST"
   c) is composable way of software development rather then monolotic way of development
   d) this architecture involves already existing of varities of techonologies/frameworks/tools to build
      microservice based application
   e) each MS runs independently and is self executable and having its of datastore,logs,trace,configuration etc...
   f) MS can be deployed on in-premises machine, server, serverless, container, cloud, container inside cloud etc....
   
Monolotic Application
   a) developed as single software
   b) big team size approx 40+ developers
   c) single and central SCM to manage source code i.e. CVS,SVN,GIT,ClearCase etc.
   d) a single and large DB server and huge schema inside
   e) long release cycles i.e. every 5 month a release
   f) heavy by size and small modification needs complete re-build
   g) time duration is more then a year

Microservice Application
   a) developed a single resource/use case/functionality, following SRP
   b) will have its own seperate small side DB
   c) team-size will be 2-3 developres
   d) release cycles will be in days or just less then 2-3 months
   e) ready and perfect to deploy anywhere i.e. physicl machine,on server,severless,container,cloud,
      client side,third party environment,use and pay env etc..
   f) each MS can be developed in different language i.e. JavaScript,Java,C#,Scala,Grovvy etc.
   g) each MS can be developed using different frameworks/tools i.e. Spring Boot, Eclipse Microprofile 
   h) Few MS can build in-house and others can be purchased or consumed
   i) progressive way of application development
   j) composable way of application development 
   k) is always very light weight and self executable

Book - Compete with Time  

Spring Boot
	- is tool to develop and deploy MS using Spring framework in Java language in no time

Eclipse Microprofile 1.0/2.0/3.x	
	- is subset of JEE WEB Profile APIs to build and develop Microservices using 
          common/uniform standards APIs
	- adds more APIs on top of standard subset JEE Apis to bring more features in MS development
          i.e. OpenAPI,Config,Metrics,Health,OpenTracing,REST Client,FaultTolerance etc..
        - is just a specification designed by Eclipse community with industry leaders to bring a common
          development environment for MS developers
        - is already having many runtime implementations in the market today i.e. OpenLiberty,TomEE,Payara, Wildfly Swarm etc...
        - is used to develop cloud native MSs
	- supports building REST based microservices using common HTTP verbs like GET,POST,PUT,DELETE,PATCH,OPTIONS
   
Oracle J2EE/JEE/Jakarta 
   Servlets,JSP,Taglib,JSF,Facelet,EJB,JMS,JNDI,ORB,JAX-WS,JAX-RS,JAXM,JAXP,JAXB,SAAJ,RMI-IIOP,JAAS,JCE etc...

Oracle JEE 5/6/7/8
   - Full Profile
       EJB,JMS,JTA,JNDI,ORB,JAXM,JAXP,JAXB,SAAJ,RMI-IIOP,JAAS,JCE etc...
   - Web Profile
	Servlets,JSP,Taglib,JSF,Facelet,JAX-WS,JAX-RS,CDI,JSON-P,JSON-B
   - Eclipse Micro Pofile (Specification)
	JAX-RS 2.1,CDI 2.0,JSON-P 1.0,JSON-B
   
Server Vendors
 Microprofile Servers/Embedded Servers/Independent Runtime (OpenLiberty 20.0,TomEE,Payara Micro, Wildfly Swarm...)
	- can only be Eclipse Micro Pofile complient
 Web Servers (Tomcat,JRun,Jetty...)
	- can only be Web Profile complient
 Application Servers (Websphere,Weblogic,Jboss AS,Glassfish AS..)
	- can only be Full Profile complient
	- can only be Web Profile complient


Environment Setup
1) Install JDK 8
    set JAVA_HOME = 	 
    set PATH =
    set CLASSPATH =
2) Install Maven
    set M2_HOME = C:\MAVEN\apache-maven-3.5.4 
    set PATH = blah blah;%M2_HOME%\bin
3) Build Web application using Maven
   mvn archetype:generate -DarchetypeArtifactId=maven-archetype-webapp
4) Add Microprofile depency in pom.xml
5) Start writing code for REST based MS
   

Steps for developing Microprofile based MS
  1) Write a REST resource and expose it on HTTP endpoint
  2) Combine all your Resources/MSs under a command URI
  3) Bundle MS as war
  4) Deploy MS on Microprofile complaint runtime only
  5) Test the service 
     http://localhost:9080/simple/api/person
     Rest Client
         Postman
         ARC
         YARC
         CURL
         SOAP UI
         Apache JMeter
         Programatic client using Java APIs
               JAX-RS Client API
               Microprofile REST Client API
                    - simplify communication to REST baesd MS 
                    - Java developer friendly                     
	 	    - provide type safe way of communication 

  
Using OpenLiberty in Embedded mode
  - maven has a open liberty plugin
  - OpenLiberty will be downloaded by maven in project "target" folder
  - all liberty plugin goals start/stop/run/package/deploy/dev/test all from within maven build only
 
Open Liberty Microprofile (3.3) Features
[appSecurity-2.0, cdi-2.0, concurrent-1.0, distributedMap-1.0, jaxrs-2.1, jaxrsClient-2.1,
   jndi-1.0, json-1.0, jsonb-1.0, jsonp-1.1, jwt-1.0, microProfile-3.3, monitor-1.0, 
  mpConfig-1.4, mpFaultTolerance-2.1, mpHealth-2.2, mpJwt-1.1, mpMetrics-2.3, mpOpenAPI-1.1, 
  mpOpenTracing-1.3, mpRestClient-1.4, opentracing-1.3, servlet-4.0, ssl-1.0]
   
   
   












